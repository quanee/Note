# 设值
set KEY VALUE

# 获值
get KEY

# 设置过期时间(单位:s)
set KEY VALUE ex SECONDS

# 设置过期时间(单位:s)
exprire KEY SECONDS

# 设置过期时间(单位:ms)
pexprire KEY MILLISECONDS

# 设置UNIX过期时间戳
exprireat KEY timestamp

# 设置UNIX过期时间戳
pexprireat KEY MILLISECONDS-TIMESTAMP

# 删除过期
rersist KEY

# 存在则不插入
set B 2 nx

# 存在则修改
set B 2 xx

# 批插入
mset A 1 B 2 C 3

# 批插入(原子操作)
msetnx D 7 E 3

# 获取所有键
keys *

# 设置新值并返回旧值
getset A 2

# 将值VALUE插入到字符串键key已存储内容的末尾(字符串拼接)
append KEY VALUE

# 获取字符串长度
strlen KEY


# 获取键值为key的字符串从index1到index2的值(index从左往右 从0开始 从右往左 从-1开始)
getrang KEY INDEX1 INDEX2



# # # # # # # # # # # # # # # 整型 # # # # # # 
incrby KEY INTNUM(整型)
# 将key的值加INTNUM(没有则创建,并将INTNUM赋给key)

decrby KEY INTNUM
# 将KEY的值减INTNUM

# KEY值加一
incr KEY

# KEY值减一
decr KEY

#浮点型
incrbyfloat KEY NUM(浮点型)
# 将key的值加NUM(没有则创建,并将NUM赋给key,通过传入负值做减法)


TTL KEY
PTTL KEY
# 查看剩余生存时间
# # KEY存在,但没有设置TTL,返回-1
# # KEY存在,还在生命周期内,返回剩余的秒
# # KEY曾经存在,但已消亡,返回-2

# 键类型
type KEY

# 键是否存在
exists KEY

# 键重命名
renamenx KEY NEWKEY


# 删除键
del KEY

# 设置键为key的二进制的OFFset(从右往左)位值为VALUE
setbit KEY OFFSET VALUE

# 获取键为key在OFFset位上的值(从右往左)最低位开始正数符号位为1负数为0
getbit KEY OFFSET

# 返回key在指定区间第一次出现的位置
bitpos KEY BIT [START][END]

# 获取key二进制位数
bitcount KEY

# 二进制位操作
bitop OPERATION KEY [KEY ...]

# 清除当前库数据
flushdb

flushall
# 清除所有库中的数据

#List列表(Linked List实现元素为字符串)
b u
l LEFT
r RIGHT
x EXIST
# 从左压入元素
lpush KEY VALUE
# 从左压入元素
lrushx KEY VALUE
# 从右压入元素
rpush KEY VALUE
# 从右压入元素
rpushx KEY VALUE
# 从左弹出元素
lpop KEY
# 从右弹出元素
rpop KEY
# 从source尾部弹出元素,压入destination头部
rpoplpush SOURCE DESTINATION
# 返回指定范围元素
lrange KEY START STOP
# 获取指定位置的元素
lindex KEY INDEX
# 设置指定位置元素的值
lset KEY INDEX VALUE
# 元素列表长度(元素个数)
llen KEY

LREM KEY COUNT VALUE
	count>0:从表头开始遍历移除count个值为VALUE的元素
	count<0:从表尾开始遍历移除count绝对值个值为VALUE的元素
	count=0:移除所有值为VALUE的元素
# 移除从start到stop以外的元素
ltrim KEY START STOP
# 在pivot(key中已有元素)之前(BEFORE)或之后(AFTER)插入元素VALUE
linsert KEY BEFORE|AFTER PIVOT VALUE

# 从列表头部阻塞弹出元素
blpop KEY timeout
# 从列表尾部阻塞弹出元素
brpop KEY TIMEOUT